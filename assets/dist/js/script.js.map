{"version":3,"file":"script.js","mappings":";MAOA,IAAMA,EAAMC,SACNC,EAAMC,OACNC,EAAMC,UACNC,EAAMC,mBACNC,EAAMN,EAAIO,SACVC,EAAOV,EAAIU,KACXC,EAAK,iBAMX,SAASC,EAAeC,GACtB,MAA0CX,EAAIS,GAAzCG,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAAaC,EAAG,EAAHA,IAGnC,GAFAJ,EAASK,OAAOL,KAIM,MAAnBT,EAAIe,YAAsBL,GAGF,cAAxBd,EAAIoB,iBAGH,2CAA4CC,KAAKjB,EAAIkB,YARzD,CAaA,IArBwB,EAqBlBC,GApB0D,QAAzD,EAACvB,EAAIwB,OAAOC,MAAM,+CAAuC,QAAI,CAAC,KAAKC,MAAMC,MAAM,KAsBlFC,EAAuC,IAAvBL,EAAYM,OAC5BC,GAAqD,IAAjCP,EAAYQ,QAAQlB,GACxCmB,EAAWhC,EAAIgC,SAGkB,IAAjCA,EAASD,QAAQvB,EAAIyB,UACvBL,EAAe,EAGXI,IAAaxB,EAAI0B,OACnBJ,EAAmB,GAIrBE,EAAW,IAGb,IAAMG,EAAMnC,EAAIoC,cAAc,OAC9BD,EAAIE,MAAMC,QAAU,OACpBH,EAAII,OAAS,WACX7B,EAAK8B,YAAYL,GACjBL,GAAoBP,EAAYkB,KAAK5B,GACjCE,IAAYf,EAAIwB,OAAS,IAAH,OAAOb,EAAE,yBAAiBY,EAAYmB,KAAK,KAAI,8BAAsB1B,EAAW,kBAC5G,EAGAmB,EAAIQ,IAAM1B,EAAM,GAAH,OAAMA,EAAIc,QAAQ,MAAQ,EAAI,IAAM,IAAG,aAAKlB,EAAM,eAAOe,EAAY,eAAOE,EAAgB,cAAMxB,EAAI0B,GAAS,gBAAQY,KAAKC,SAASC,SAAS,KAC3JpC,EAAKqC,YAAYZ,EA/BjB,CAgCF,CASAjC,EAAI8C,iBAAiB,QAPrB,WAEO9C,EAAIS,KACTC,EAAcV,EAAIS,GAAIsC,SACtB/C,EAAIS,GAAIC,cAAgBA,EAC1B","sources":["webpack://koko-analytics/./assets/src/js/script.js"],"sourcesContent":["/**\n * @package koko-analytics\n * @author Danny van Kooten\n * @license GPL-3.0+\n */\n\n// Map variables to global identifiers so that minifier can mangle them to even shorter names\nconst doc = document\nconst win = window\nconst nav = navigator\nconst enc = encodeURIComponent\nconst loc = win.location\nconst body = doc.body\nconst ka = \"koko_analytics\"\n\nfunction getPagesViewed() {\n  return (doc.cookie.match(/_koko_analytics_pages_viewed=([^;]+)/) ?? [\"\"]).pop().split('a')\n}\n\nfunction trackPageview (postId) {\n  let {dnt, use_cookie, cookie_path, url} = win[ka]\n  postId = String(postId)\n\n  if (\n    // do not track if \"Do Not Track\" is enabled\n    (nav.doNotTrack === '1' && dnt) ||\n\n    // do not track if this is a prerender request\n    (doc.visibilityState === 'prerender') ||\n\n    // do not track if user agent looks like a bot\n    ((/bot|crawl|spider|seo|lighthouse|preview/i).test(nav.userAgent))\n  ) {\n    return\n  }\n\n  const pagesViewed = getPagesViewed()\n  // first element is always empty string, so if length is 1 it is empty\n  let isNewVisitor = +pagesViewed.length === 1\n  let isUniquePageview = +pagesViewed.indexOf(postId) === -1\n  let referrer = doc.referrer\n\n  // check if referred by same-site (so definitely a returning visitor)\n  if (referrer.indexOf(loc.origin) === 0) {\n    isNewVisitor = 0\n\n    // check if referred by same page (so not a unique pageview)\n    if (referrer === loc.href) {\n      isUniquePageview = 0\n    }\n\n    // don't store referrer if from same-site\n    referrer = ''\n  }\n\n  const img = doc.createElement('img')\n  img.style.display = 'none'\n  img.onload = () => {\n    body.removeChild(img)\n    isUniquePageview && pagesViewed.push(postId)\n    if (use_cookie) doc.cookie = `_${ka}_pages_viewed=${pagesViewed.join('a')};SameSite=lax;path=${cookie_path};max-age=21600`\n  }\n\n  // build tracker URL\n  img.src = url + `${url.indexOf('?') > -1 ? '&' : '?'}p=${postId}&nv=${isNewVisitor}&up=${isUniquePageview}&r=${enc(referrer)}&rqp=${Math.random().toString(36)}`\n  body.appendChild(img)\n}\n\nfunction init () {\n  // window.koko_analytics might be missing if the active theme is not calling wp_head()\n  if (!win[ka]) return\n  trackPageview(win[ka].post_id)\n  win[ka].trackPageview = trackPageview\n}\n\nwin.addEventListener('load', init)\n"],"names":["doc","document","win","window","nav","navigator","enc","encodeURIComponent","loc","location","body","ka","trackPageview","postId","dnt","use_cookie","cookie_path","url","String","doNotTrack","visibilityState","test","userAgent","pagesViewed","cookie","match","pop","split","isNewVisitor","length","isUniquePageview","indexOf","referrer","origin","href","img","createElement","style","display","onload","removeChild","push","join","src","Math","random","toString","appendChild","addEventListener","post_id"],"sourceRoot":""}